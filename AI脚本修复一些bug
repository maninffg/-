local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/useranewrff/roblox/main/%E9%BB%91%E9%87%91.lua"))()

local Window = OrionLib:MakeWindow({Name = "AI脚本中心", HidePremium = false, SaveConfig = true,IntroText = "脚本启动", ConfigFolder = "脚本启动"})

game:GetService("StarterGui"):SetCore("SendNotification",{ Title = "脚本启动"; Text ="脚本启动"; Duration = 5; })

local about = Window:MakeTab({
    Name = "AI助手制作",
    Icon = "rbxassetid://13519683179",
    PremiumOnly = false
})

about:AddParagraph("脚本为永久免费脚本","请勿拿去圈钱,圈钱的人我操你妈")
about:AddParagraph("您的注入器:"," "..identifyexecutor().."")
about:AddParagraph("您当前服务器的ID"," "..game.GameId.."")

local Tab =Window:MakeTab({
	Name = "公告",
	Icon = "rbxassetid://13519683179",
	PremiumOnly = false
})

Tab:AddButton({
	Name = "如有错误就对了，反正是AI写的",
	Callback = function()
     setclipboard("")
  	end
})

-- 修复的通用功能标签页
local UniversalTab = Window:MakeTab({
    Name = "通用功能",
    Icon = "rbxassetid://13519683179",
    PremiumOnly = false
})

-- 飞行功能（保持不变）
UniversalTab:AddButton({
    Name = "🛸 无敌少侠飞行",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/396abc/Script/refs/heads/main/MobileFly.lua"))()
    end
})

-- 修复的无限跳功能（可开关）
local InfiniteJumpEnabled = false
local InfiniteJumpConnection

UniversalTab:AddButton({
    Name = "🦘 无限跳 [关闭]",
    Callback = function()
        InfiniteJumpEnabled = not InfiniteJumpEnabled
        
        if InfiniteJumpEnabled then
            -- 开启无限跳
            local Player = game:GetService("Players").LocalPlayer
            
            if InfiniteJumpConnection then
                InfiniteJumpConnection:Disconnect()
            end
            
            InfiniteJumpConnection = game:GetService("UserInputService").JumpRequest:Connect(function()
                if InfiniteJumpEnabled then
                    Player.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
                end
            end)
            
            OrionLib:MakeNotification({
                Name = "无限跳",
                Content = "无限跳已开启",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        else
            -- 关闭无限跳
            if InfiniteJumpConnection then
                InfiniteJumpConnection:Disconnect()
                InfiniteJumpConnection = nil
            end
            
            OrionLib:MakeNotification({
                Name = "无限跳",
                Content = "无限跳已关闭",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        end
        
        -- 更新按钮名称
        UniversalTab:UpdateButton("🦘 无限跳 [关闭]", {
            Name = InfiniteJumpEnabled and "🦘 无限跳 [开启]" or "🦘 无限跳 [关闭]"
        })
    end
})

-- 移动速度调节（保持不变）
UniversalTab:AddTextbox({
    Name = "🏃 移动速度 (1-400)",
    Default = "16",
    TextDisappear = true,
    Callback = function(Value)
        local speed = tonumber(Value)
        if speed and speed >= 1 and speed <= 400 then
            game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = speed
        end
    end
})

-- 自杀功能（保持不变）
UniversalTab:AddButton({
    Name = "💀 自杀",
    Callback = function()
        game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Health = 0
    end
})

-- 修复的音乐功能部分
local musicVolume = 5
local isMuted = false
local originalVolumes = {}

UniversalTab:AddSection({
    Name = "🎵 音乐控制"
})

-- 修复的静音功能（可开关）
UniversalTab:AddButton({
    Name = "🔇 静音 [关闭]",
    Callback = function()
        isMuted = not isMuted
        
        if isMuted then
            -- 保存原始音量并静音
            for _, sound in pairs(workspace:GetDescendants()) do
                if sound:IsA("Sound") then
                    originalVolumes[sound] = sound.Volume
                    sound.Volume = 0
                end
            end
            
            OrionLib:MakeNotification({
                Name = "静音",
                Content = "已静音所有声音",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        else
            -- 恢复原始音量
            for sound, originalVolume in pairs(originalVolumes) do
                if sound and sound:IsA("Sound") then
                    sound.Volume = originalVolume
                end
            end
            originalVolumes = {}
            
            OrionLib:MakeNotification({
                Name = "静音",
                Content = "已取消静音",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        end
        
        -- 更新按钮名称
        UniversalTab:UpdateButton("🔇 静音 [关闭]", {
            Name = isMuted and "🔇 静音 [开启]" or "🔇 静音 [关闭]"
        })
    end
})

-- 修复的音量调节滑块
UniversalTab:AddSlider({
    Name = "音量调节",
    Min = 0,
    Max = 10,
    Default = 5,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "等级",
    Callback = function(Value)
        musicVolume = Value
        if not isMuted then
            for _, sound in pairs(workspace:GetDescendants()) do
                if sound:IsA("Sound") then
                    sound.Volume = Value / 10
                end
            end
        end
    end
})

UniversalTab:AddTextbox({
    Name = "播放音乐 (输入ID)",
    Default = "",
    TextDisappear = true,
    Callback = function(Value)
        local soundId = tonumber(Value)
        if soundId then
            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://" .. soundId
            sound.Volume = isMuted and 0 or musicVolume / 10
            sound.Parent = workspace
            sound:Play()
        end
    end
})

-- 修复的透视功能（可开关，显示血条和线条）
local ESPEnabled = false
local ESPObjects = {}

local function createESP(player)
    if not player.Character then return end
    
    local highlight = Instance.new("Highlight")
    highlight.FillColor = Color3.fromRGB(255, 0, 0)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.FillTransparency = 0.5
    highlight.Parent = player.Character
    
    -- 显示名字和血条
    local billboard = Instance.new("BillboardGui")
    billboard.Size = UDim2.new(0, 200, 0, 80)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    billboard.Parent = player.Character.Head
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 0.5, 0)
    textLabel.Text = player.Name
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.TextScaled = true
    textLabel.Parent = billboard
    
    local healthLabel = Instance.new("TextLabel")
    healthLabel.Size = UDim2.new(1, 0, 0.5, 0)
    healthLabel.Position = UDim2.new(0, 0, 0.5, 0)
    healthLabel.Text = "HP: " .. math.floor(player.Character.Humanoid.Health)
    healthLabel.BackgroundTransparency = 1
    healthLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    healthLabel.TextScaled = true
    healthLabel.Parent = billboard
    
    -- 创建连线到玩家
    local line = Instance.new("LineHandleAdornment")
    line.Length = 10
    line.Thickness = 2
    line.Color3 = Color3.fromRGB(255, 255, 255)
    line.Adornee = player.Character.Head
    line.Parent = player.Character.Head
    
    ESPObjects[player] = {
        Highlight = highlight,
        Billboard = billboard,
        Line = line,
        HealthConnection = player.Character.Humanoid:GetPropertyChangedSignal("Health"):Connect(function()
            healthLabel.Text = "HP: " .. math.floor(player.Character.Humanoid.Health)
        end)
    }
end

local function removeESP(player)
    if ESPObjects[player] then
        if ESPObjects[player].Highlight then
            ESPObjects[player].Highlight:Destroy()
        end
        if ESPObjects[player].Billboard then
            ESPObjects[player].Billboard:Destroy()
        end
        if ESPObjects[player].Line then
            ESPObjects[player].Line:Destroy()
        end
        if ESPObjects[player].HealthConnection then
            ESPObjects[player].HealthConnection:Disconnect()
        end
        ESPObjects[player] = nil
    end
end

UniversalTab:AddButton({
    Name = "👁️ 透视玩家 [关闭]",
    Callback = function()
        ESPEnabled = not ESPEnabled
        
        if ESPEnabled then
            -- 开启透视
            for _, player in pairs(game.Players:GetPlayers()) do
                if player ~= game.Players.LocalPlayer and player.Character then
                    createESP(player)
                end
            end
            
            -- 监听新玩家
            game.Players.PlayerAdded:Connect(function(player)
                player.CharacterAdded:Connect(function(character)
                    if ESPEnabled then
                        wait(1) -- 等待角色加载
                        createESP(player)
                    end
                end)
            end)
            
            OrionLib:MakeNotification({
                Name = "透视",
                Content = "玩家透视已开启",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        else
            -- 关闭透视
            for player, _ in pairs(ESPObjects) do
                removeESP(player)
            end
            ESPObjects = {}
            
            OrionLib:MakeNotification({
                Name = "透视",
                Content = "玩家透视已关闭",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        end
        
        -- 更新按钮名称
        UniversalTab:UpdateButton("👁️ 透视玩家 [关闭]", {
            Name = ESPEnabled and "👁️ 透视玩家 [开启]" or "👁️ 透视玩家 [关闭]"
        })
    end
})

-- 修复的穿墙功能（可开关）
local NoclipEnabled = false
local NoclipConnection

UniversalTab:AddButton({
    Name = "🧱 穿墙模式 [关闭]",
    Callback = function()
        NoclipEnabled = not NoclipEnabled
        
        if NoclipEnabled then
            -- 开启穿墙
            local Player = game.Players.LocalPlayer
            
            local function noclip()
                if Player.Character then
                    for _, child in pairs(Player.Character:GetDescendants()) do
                        if child:IsA("BasePart") and child.CanCollide == true then
                            child.CanCollide = false
                        end
                    end
                end
            end
            
            NoclipConnection = game:GetService("RunService").Stepped:Connect(noclip)
            
            OrionLib:MakeNotification({
                Name = "穿墙模式",
                Content = "穿墙模式已开启",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        else
            -- 关闭穿墙
            if NoclipConnection then
                NoclipConnection:Disconnect()
                NoclipConnection = nil
            end
            
            -- 恢复碰撞
            local Player = game.Players.LocalPlayer
            if Player.Character then
                for _, child in pairs(Player.Character:GetDescendants()) do
                    if child:IsA("BasePart") then
                        child.CanCollide = true
                    end
                end
            end
            
            OrionLib:MakeNotification({
                Name = "穿墙模式",
                Content = "穿墙模式已关闭",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        end
        
        -- 更新按钮名称
        UniversalTab:UpdateButton("🧱 穿墙模式 [关闭]", {
            Name = NoclipEnabled and "🧱 穿墙模式 [开启]" or "🧱 穿墙模式 [关闭]"
        })
    end
})

-- 传送功能（保持不变）
UniversalTab:AddTextbox({
    Name = "✨ 传送到玩家",
    Default = "输入玩家名",
    TextDisappear = true,
    Callback = function(Value)
        local targetPlayer = nil
        for _, player in pairs(game.Players:GetPlayers()) do
            if string.lower(player.Name) == string.lower(Value) then
                targetPlayer = player
                break
            end
        end
        
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
        end
    end
})

-- 原有的其他标签页保持不变
local Tab =Window:MakeTab({
	Name = "手机注入器网址(进不去就开vpn)",
	Icon = "rbxassetid://13519683179",
	PremiumOnly = false
})

Tab:AddButton({
	Name = "fluxus",
	Callback = function()
    setclipboard("https://fluxteam.cc")
    end
})

Tab:AddButton({
	Name = "vage",
	Callback = function()
    setclipboard("VegaX.gg")
    end
})

Tab:AddButton({
	Name = "Arceus x(阿尔宙斯)",
	Callback = function()
    setclipboard("https://spdmteam.com")
    end
})

Tab:AddButton({
	Name = "Delta(忍者注入器)",
	Callback = function()
    setclipboard("https://deltaexector.com/")
    end
})

Tab:AddButton({
	Name = "codex",
	Callback = function()
    setclipboard("https://codex.lol/")
    end
})

local Tab =Window:MakeTab({
	Name = "AI脚本中心选择版本",
	Icon = "rbxassetid://13519683179",
	PremiumOnly = false
})

Tab:AddButton({
	Name = "AI脚本1",
	Callback = function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/maninffg/-/refs/heads/main/%E8%84%9A%E6%9C%AC3"))()
    end
})

local Section = Tab:AddSection({
	Name = "(通用,如有错误反正是AI写的你就去找他反馈)"
})

Tab:AddButton({
	Name = "AI脚本2",
    Callback = function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/maninffg/-/refs/heads/main/%E8%84%9A%E6%9C%AC"))()
    end
})

OrionLib:Init()
